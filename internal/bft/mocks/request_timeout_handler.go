// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	types "github.com/SmartBFT-Go/consensus/pkg/types"
	mock "github.com/stretchr/testify/mock"
)

// RequestTimeoutHandler is an autogenerated mock type for the RequestTimeoutHandler type
type RequestTimeoutHandler struct {
	mock.Mock
}

// OnAutoRemoveTimeout provides a mock function with given fields: requestInfo
func (_m *RequestTimeoutHandler) OnAutoRemoveTimeout(requestInfo types.RequestInfo) {
	_m.Called(requestInfo)
}

// OnLeaderFwdRequestTimeout provides a mock function with given fields: request, requestInfo
func (_m *RequestTimeoutHandler) OnLeaderFwdRequestTimeout(request []byte, requestInfo types.RequestInfo) {
	_m.Called(request, requestInfo)
}

// OnRequestTimeout provides a mock function with given fields: request, requestInfo
func (_m *RequestTimeoutHandler) OnRequestTimeout(request []byte, requestInfo types.RequestInfo) {
	_m.Called(request, requestInfo)
}

type mockConstructorTestingTNewRequestTimeoutHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestTimeoutHandler creates a new instance of RequestTimeoutHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestTimeoutHandler(t mockConstructorTestingTNewRequestTimeoutHandler) *RequestTimeoutHandler {
	mock := &RequestTimeoutHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
