// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	types "github.com/SmartBFT-Go/consensus/pkg/types"
	mock "github.com/stretchr/testify/mock"
)

// ApplicationMock is an autogenerated mock type for the ApplicationMock type
type ApplicationMock struct {
	mock.Mock
}

// Deliver provides a mock function with given fields: proposal, signature
func (_m *ApplicationMock) Deliver(proposal types.Proposal, signature []types.Signature) types.Reconfig {
	ret := _m.Called(proposal, signature)

	var r0 types.Reconfig
	if rf, ok := ret.Get(0).(func(types.Proposal, []types.Signature) types.Reconfig); ok {
		r0 = rf(proposal, signature)
	} else {
		r0 = ret.Get(0).(types.Reconfig)
	}

	return r0
}

type mockConstructorTestingTNewApplicationMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewApplicationMock creates a new instance of ApplicationMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewApplicationMock(t mockConstructorTestingTNewApplicationMock) *ApplicationMock {
	mock := &ApplicationMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
